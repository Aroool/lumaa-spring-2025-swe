<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Manager</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.min.css">
    <style>
        body {
            background-color: #f4f4f4;
            padding: 20px;
            text-align: center;
        }
        .container {
            max-width: 700px;
            margin: 0 auto;
            background: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        }
        h1 {
            color: #333;
        }
        .logout-btn {
            float: right;
            text-decoration: none;
            color: white;
            background: #ff4d4d;
            padding: 5px 15px;
            border-radius: 5px;
            font-size: 14px;
        }
        .logout-btn:hover {
            background: #e63939;
        }
        form {
            margin-top: 20px;
        }
        input, textarea {
            width: 100%;
            margin-bottom: 10px;
            padding: 8px;
        }
        .task-list {
            margin-top: 20px;
            text-align: left;
        }
        .task-card {
            background: #f8f8f8;
            padding: 10px;
            margin-top: 10px;
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .task-details {
            display: flex;
            width: 80%;
        }
        .task-title {
            font-weight: bold;
            width: 40%;
            text-align: left;
            padding-right: 10px;
        }
        .task-desc {
            width: 60%;
            text-align: left;
        }
        .btn-delete {
            color: white;
            background: #ff4d4d;
            padding: 5px 10px;
            border-radius: 5px;
            text-decoration: none;
            font-size: 14px;
        }
        .btn-delete:hover {
            background: #e63939;
        }
        .btn-save {
            color: white;
            background: #4CAF50;
            padding: 5px 10px;
            border-radius: 5px;
            text-decoration: none;
            font-size: 14px;
            margin-left: 10px;
        }
        .btn-save:hover {
            background: #45a049;
        }
        .task-status {
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 14px;
            color: white;
        }
        .task-status.completed {
            background: #4CAF50;
        }
        .task-status.incomplete {
            background: #ff4d4d;
        }
    </style>
</head>
<body>

    <div class="container">

        <a href="/users/logout" class="logout-btn">Logout</a>
        <h1>Hello, <%= user.name.charAt(0).toUpperCase() + user.name.slice(1) %> ðŸ‘‹</h1>

        <h2>Create a New Task</h2>
        <form id="taskForm">
            <input type="text" name="title" placeholder="Task Title" required />
            <textarea name="description" placeholder="Task Description"></textarea>
            <input type="hidden" name="userId" value="<%= user.id %>" />
            <input type="submit" value="Add Task" class="button-primary" />
        </form>

        <h2>Your Tasks</h2>
        <div id="taskList" class="task-list">
        </div>
    </div>

    <script>
        // Fetch and display tasks on page load
        fetch('/tasks?userId=<%= user.id %>')
            .then(response => response.json())
            .then(tasks => {
                const taskList = document.getElementById('taskList');
                tasks.forEach(task => {
                    addTaskToDOM(task);
                });
            });

        // Handle form submission
        document.getElementById('taskForm').addEventListener('submit', function (e) {
            e.preventDefault(); // Prevent default form submission

            const formData = new FormData(this);
            const taskData = {
                title: formData.get('title'),
                description: formData.get('description'),
                userId: formData.get('userId')
            };

            // Send POST request to create a new task
            fetch('/tasks', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(taskData)
            })
            .then(response => response.json())
            .then(task => {
                addTaskToDOM(task);
                document.getElementById('taskForm').reset();
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });

        // Function to add a task to the DOM
        function addTaskToDOM(task) {
            const taskList = document.getElementById('taskList');
            const taskDiv = document.createElement('div');
            taskDiv.classList.add('task-card');
            taskDiv.id = `task-${task.id}`;

            taskDiv.innerHTML = `
                <div class="task-details">
                    <p class="task-title">${task.title}</p>
                    <p class="task-desc">${task.description || "No description provided"}</p>
                </div>
                <div class="task-status ${task.is_complete ? 'completed' : 'incomplete'}">
                    ${task.is_complete ? 'Completed' : 'Incomplete'}
                </div>
                <a href="/tasks/edit/${task.id}" class="btn-delete">Edit</a>
                <a href="#" class="btn-delete" onclick="deleteTask(${task.id})">Delete</a>
            `;
            taskList.appendChild(taskDiv);
        }

        // Function to delete a task
        function deleteTask(taskId) {
            if (confirm('Are you sure you want to delete this task?')) {
                fetch(`/tasks/${taskId}`, {
                    method: 'DELETE'
                })
                .then(() => {
                    // Remove the task from the DOM
                    const taskDiv = document.getElementById(`task-${taskId}`);
                    taskDiv.remove();
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            }
        }
    </script>

</body>
</html>